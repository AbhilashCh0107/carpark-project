def nativeBuildSystem = 'none'// Controls output directory in APK and CPU type for Bazel builds.// NOTE: Does not affect the Makefile build target API (yet), which currently// assumes armeabi-v7a. If building with make, changing this will require// editing the Makefile as well.// The CMake build has only been tested with armeabi-v7a; others may not work.def cpuType = 'armeabi-v7a'// Output directory in the local directory for packaging into the APK.def nativeOutDir = 'libs/' + cpuType// Default to building with Bazel and override with make if requested.def nativeBuildRule = 'buildNativeBazel'def demoLibPath = 'ibtensorflow_demo.so'def inferenceLibPath = 'libtensorflow_inference.so'// Override for Makefile builds.if (nativeBuildSystem == 'makefile') {    nativeBuildRule = 'buildNativeMake'    demoLibPath = 'libtensorflow_demo.so'    inferenceLibPath = 'libtensorflow_inference.so'}// If building with Bazel, this is the location of the bazel binary.// NOTE: Bazel does not yet support building for Android on Windows,// so in this case the Makefile build must be used as described above.def bazelLocation = '/usr/local/bin/bazel'// import DownloadModels taskproject.ext.ASSET_DIR = projectDir.toString() + '/assets'project.ext.TMP_DIR = project.buildDir.toString() + '/downloads'apply plugin: 'com.android.application'apply plugin: 'com.google.gms.google-services'apply plugin: 'com.google.firebase.crashlytics'android {    compileSdkVersion 29    defaultConfig {        applicationId "com.service.parking.theparker"        minSdkVersion 22        targetSdkVersion 29        versionCode 1        versionName "1.0"        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"        multiDexEnabled true        vectorDrawables.useSupportLibrary = true    }    buildTypes {        release {            minifyEnabled false            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'        }    }    compileOptions {        sourceCompatibility JavaVersion.VERSION_1_8        targetCompatibility JavaVersion.VERSION_1_8    }    buildToolsVersion '29.0.3'//    useLibrary 'org.apache.http.legacy'    packagingOptions {        exclude 'META-INF/DEPENDENCIES'        exclude 'META-INF/LICENSE'        exclude 'META-INF/LICENSE.txt'        exclude 'META-INF/license.txt'        exclude 'META-INF/NOTICE'        exclude 'META-INF/NOTICE.txt'        exclude 'META-INF/notice.txt'        exclude 'META-INF/ASL2.0'    }}task buildNativeBazel(type: Exec) {    workingDir '../../..'    commandLine bazelLocation, 'build', '-c', 'opt', 'tensorflow/examples/android:tensorflow_native_libs', '--crosstool_top=//externa l:android/crosstool', '--cpu=' + cpuType, '--host_cross tool_top=@baz el_tools//tools/cpp:toolchain'}task buildNativeMake(type: Exec) {    environment "NDK_ROOT", android.ndkDirectory    // Tip: install ccache and uncomment the following to speed up    // builds significantly.    environment "CC_PREFIX", 'ccache'    workingDir '../../..'    commandLine 'tensorflow/contrib/makefile/build_all_android.sh', '-s', 'tensorf low/c ontrib/make fi le/sub_makefiles/android/Makefile.in', '-t', 'libtens  orfl o w_inferen ce .s o libtensorflow_demo.so'  \         , '-T'  // Un   comment to skip protobuf and speed up subsequent builds.}task copyNativeLibs(type: Copy) {    from demoLibPath    from inferenceLibPath    into nativeOutDir    duplicatesStrategy = 'include'    dependsOn nativeBuildRule    fileMode 0644}tasks.whenTaskAdded { task ->    if (nativeBuildSystem == 'bazel' || nativeBuildSystem == 'makefile') {        if (task.name == 'assembleDebug') {            task.dependsOn 'copyNativeLibs'        }        if (task.name == 'assembleRelease') {            task.dependsOn 'copyNativeLibs'        }    }}dependencies {    implementation fileTree(include: ['*.jar'], dir: 'libs')    //noinspection GradleCompatible    implementation 'androidx.appcompat:appcompat:1.1.0'    implementation 'com.google.android.material:material:1.0.0'    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'    // Material dialog dependency    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'    //Google Map    implementation 'com.google.android.gms:play-services-maps:17.0.0'    implementation 'com.google.android.gms:play-services-auth:17.0.0'    implementation 'com.google.android.gms:play-services-location:17.0.0'    implementation 'com.google.android.gms:play-services-places:17.0.0'    implementation 'androidx.legacy:legacy-support-v4:1.0.0'    implementation 'androidx.recyclerview:recyclerview:1.1.0'    testImplementation 'junit:junit:4.13'    androidTestImplementation 'androidx.test.ext:junit:1.1.1'    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'    //Navigation Editor Support    implementation 'androidx.navigation:navigation-fragment:2.3.0-beta01'    implementation 'androidx.navigation:navigation-ui:2.3.0-beta01'    //DatePicker//    implementation 'com.wdullaer:materialdatetimepicker:4.1.2'    implementation('com.shagi:material-datepicker:1.2') {        exclude group: 'com.android.support'    }    //UI    implementation 'com.github.markushi:circlebutton:1.1'    implementation 'de.hdodenhof:circleimageview:3.1.0'    //Binding xml to javafile    implementation 'com.jakewharton:butterknife:10.2.1'    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'    implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.2'    implementation 'com.github.ceryle:SegmentedButton:v2.0.2'    implementation 'com.github.zcweng:switch-button:0.0.3@aar'    implementation 'com.github.GrenderG:Toasty:1.3.1'    //material edit text    implementation 'com.github.HITGIF:TextFieldBoxes:1.4.4'    //photo load from url    implementation 'com.github.bumptech.glide:glide:4.11.0'    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'    implementation 'com.squareup.picasso:picasso:2.71828'    //Animation    implementation 'com.airbnb.android:lottie:3.4.0'    //Network Request    //Firebase    implementation 'com.google.android.gms:play-services-auth:18.0.0'    implementation 'com.google.firebase:firebase-auth:19.3.1'    implementation 'com.google.firebase:firebase-core:17.4.2'    implementation 'com.google.firebase:firebase-database:19.3.0'    implementation 'com.google.firebase:firebase-messaging:20.2.0'    // Import the BoM for the Firebase platform    implementation platform('com.google.firebase:firebase-bom:28.0.1')    // Declare the dependencies for the Crashlytics and Analytics libraries    // When using the BoM, you don't specify versions in Firebase library dependencies    implementation 'com.google.firebase:firebase-crashlytics'    implementation 'com.google.firebase:firebase-analytics'    implementation 'org.tensorflow:tensorflow-android:1.13.1'    implementation 'com.google.firebase:firebase-functions:20.0.0'    implementation 'com.google.code.gson:gson:2.8.6'    implementation 'com.google.firebase:firebase-ml-vision:24.0.1'    implementation 'com.loopj.android:android-async-http:1.4.9'    implementation 'com.googlecode.json-simple:json-simple:1.1'    implementation project(':googleDirectionLib')    implementation "androidx.browser:browser:1.2.0"    implementation 'com.google.firebase:firebase-storage:19.1.0'}